// <auto-generated />
using System;
using CarAppInfrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarAppInfrastructure.Migrations
{
    [DbContext(typeof(CarAppContext))]
    partial class CarAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarAppCore.Entities.BodyType", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("BodyTypes");
                });

            modelBuilder.Entity("CarAppCore.Entities.Brand", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("CarAppCore.Entities.Car", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BodyTypeID")
                        .HasColumnType("bigint");

                    b.Property<long>("BrandID")
                        .HasColumnType("bigint");

                    b.Property<long>("DriveTypeID")
                        .HasColumnType("bigint");

                    b.Property<long>("EngineTypeID")
                        .HasColumnType("bigint");

                    b.Property<double>("EngineVolume")
                        .HasColumnType("float");

                    b.Property<DateTime>("ManufacturingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Miliage")
                        .HasColumnType("int");

                    b.Property<long>("ModelID")
                        .HasColumnType("bigint");

                    b.Property<long>("TransmissionTypeID")
                        .HasColumnType("bigint");

                    b.Property<long?>("modelOfCarID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("BodyTypeID");

                    b.HasIndex("BrandID");

                    b.HasIndex("DriveTypeID");

                    b.HasIndex("EngineTypeID");

                    b.HasIndex("TransmissionTypeID");

                    b.HasIndex("modelOfCarID");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarAppCore.Entities.DriveType", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DriveTypes");
                });

            modelBuilder.Entity("CarAppCore.Entities.EngineType", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EngineTypes");
                });

            modelBuilder.Entity("CarAppCore.Entities.ModelOfCar", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ModelsOfCars");
                });

            modelBuilder.Entity("CarAppCore.Entities.TransmissionType", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TransmissionTypes");
                });

            modelBuilder.Entity("CarAppCore.Entities.Car", b =>
                {
                    b.HasOne("CarAppCore.Entities.BodyType", "bodyType")
                        .WithMany("CarList")
                        .HasForeignKey("BodyTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarAppCore.Entities.Brand", "brand")
                        .WithMany("CarList")
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarAppCore.Entities.DriveType", "driveType")
                        .WithMany("CarList")
                        .HasForeignKey("DriveTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarAppCore.Entities.EngineType", "engineType")
                        .WithMany("CarList")
                        .HasForeignKey("EngineTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarAppCore.Entities.TransmissionType", "transmissionType")
                        .WithMany("CarList")
                        .HasForeignKey("TransmissionTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarAppCore.Entities.ModelOfCar", "modelOfCar")
                        .WithMany("CarList")
                        .HasForeignKey("modelOfCarID");

                    b.Navigation("bodyType");

                    b.Navigation("brand");

                    b.Navigation("driveType");

                    b.Navigation("engineType");

                    b.Navigation("modelOfCar");

                    b.Navigation("transmissionType");
                });

            modelBuilder.Entity("CarAppCore.Entities.BodyType", b =>
                {
                    b.Navigation("CarList");
                });

            modelBuilder.Entity("CarAppCore.Entities.Brand", b =>
                {
                    b.Navigation("CarList");
                });

            modelBuilder.Entity("CarAppCore.Entities.DriveType", b =>
                {
                    b.Navigation("CarList");
                });

            modelBuilder.Entity("CarAppCore.Entities.EngineType", b =>
                {
                    b.Navigation("CarList");
                });

            modelBuilder.Entity("CarAppCore.Entities.ModelOfCar", b =>
                {
                    b.Navigation("CarList");
                });

            modelBuilder.Entity("CarAppCore.Entities.TransmissionType", b =>
                {
                    b.Navigation("CarList");
                });
#pragma warning restore 612, 618
        }
    }
}
